# Copyright 2022 Mycroft AI Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   
# -----------------------------------------------------------------------------
# Dockerfile for Mimic 3 (https://github.com/MycroftAI/mimic3)
#
# Runs an HTTP server on port 59125.
# See scripts in docker/ directory of this repository.
#
# Requires Docker buildx: https://docs.docker.com/buildx/working-with-buildx/
# -----------------------------------------------------------------------------

FROM nvcr.io/nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04

ARG TARGETARCH
ARG TARGETVARIANT

ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

RUN echo "Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};" > /etc/apt/apt.conf.d/01cache

RUN --mount=type=cache,id=apt-build,target=/var/cache/apt \
    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3 \
        python3-pip \
        python3-venv \
        build-essential \
        python3-dev \
        wget \
        ca-certificates && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /home/mimic3/app

COPY opentts_abc/ ./opentts_abc/
COPY mimic3_http/ ./mimic3_http/
COPY mimic3_tts/ ./mimic3_tts/
COPY LICENSE MANIFEST.in README.md setup.py requirements.txt ./
COPY install.sh ./

# Use GPU version of onnxruntime
RUN sed -i 's/onnxruntime/onnxruntime-gpu/' ./requirements.txt

# Install mimic3
RUN --mount=type=cache,id=pip-requirements,target=/root/.cache/pip \
    ./install.sh

# Copy default voice
#COPY voices/ /usr/local/share/mycroft/mimic3/voices/ 

RUN mkdir -p /usr/share/mycroft/mimic3/voices/en_US/hifi-tts_low
RUN wget -O /usr/share/mycroft/mimic3/voices/en_US/hifi-tts_low/generator.onnx https://huggingface.co/mukowaty/mimic3-voices/resolve/main/voices/en_US/hifi-tts_low/generator.onnx

RUN mkdir -p /usr/share/mycroft/mimic3/voices/fa/haaniye_low
RUN wget -O /usr/share/mycroft/mimic3/voices/fa/haaniye_low/generator.onnx https://huggingface.co/mukowaty/mimic3-voices/resolve/main/voices/fa/haaniye_low/generator.onnx

# Create a group and user with specific UID/GID for better permission handling
ARG USER_ID=1000
ARG GROUP_ID=1000

# Create group with specific GID and user with specific UID
RUN groupadd -g ${GROUP_ID} mimic3 && \
    useradd -u ${USER_ID} -g mimic3 -ms /bin/bash mimic3 && \
    # Ensure the app directory is owned by the user
    chown -R mimic3:mimic3 /home/mimic3/app && \
    # Ensure voice directories are writable
    chown -R mimic3:mimic3 /usr/share/mycroft/mimic3/voices

# Switch to non-root user
USER mimic3
WORKDIR /home/mimic3/app

# Ensure the user's home directory has the correct permissions
RUN chmod 755 /home/mimic3

EXPOSE 59125

ENTRYPOINT ["/home/mimic3/app/.venv/bin/python3", "-m", "mimic3_http", "--cuda"]
